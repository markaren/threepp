
name: Build

on: [push, workflow_dispatch]

jobs:
  vcpkg-on-linux:

    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.compiler_version }}
      CXX: g++-${{ matrix.compiler_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        compiler_version: [9]

    steps:
    - uses: actions/checkout@v3

    - name: Install prerequisites
      run: |
        sudo apt-get update && sudo apt-get install -y \
        libxinerama-dev \
        libxcursor-dev \
        xorg-dev \
        libglu1-mesa-dev \
        pkg-config

    - name: Restore artifacts, or run vcpkg, build (and cache artifacts as post step)
      uses: lukka/run-vcpkg@v10
      id: runvcpkg
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: '12c2a93b4007612b5ffa980c9d2235eb0bcac10f'
        vcpkgJsonGlob: 'vcpkg.json'
        appendedCacheKey: vcpkginstall

    - name: Configure and build
      run: |
        cmake . -B build -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_MANIFEST_FEATURES="imgui;assimp;pugixml" -DTHREEPP_WITH_SVG_FEATURE=ON -DCMAKE_BUILD_TYPE=Release
        cmake --build build

    - name: Test
      run: |
        cd build/tests
        ctest --output-on-failure


  vcpkg-on-windows:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]

    steps:
      - uses: actions/checkout@v3

      - name: Restore artifacts, or run vcpkg, build (and cache artifacts as post step)
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '12c2a93b4007612b5ffa980c9d2235eb0bcac10f'
          vcpkgJsonGlob: 'vcpkg.json'
          appendedCacheKey: vcpkginstall

      - name: Configure and build
        run: |
          cmake . -A x64 -B build -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_MANIFEST_FEATURES="imgui" -DCMAKE_BUILD_TYPE="Release"
          cmake --build build --config Release

      - name: Test
        run: |
          cd build/tests
          ctest -C Release --output-on-failure


  vcpkg-on-darwin:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11]

    steps:
      - uses: actions/checkout@v3

      - name: Restore artifacts, or run vcpkg, build (and cache artifacts as post step)
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '12c2a93b4007612b5ffa980c9d2235eb0bcac10f'
          vcpkgJsonGlob: 'vcpkg.json'
          appendedCacheKey: vcpkginstall

      - name: Install prerequisites
        run: |
          brew install pkg-config

      - name: Configure and build
        run: |
          cmake . -B build -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DTHREEPP_BUILD_EXAMPLES=OFF -DTHREEPP_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE="Release"
          cmake --build build
