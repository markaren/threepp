
name: Build

on: [push, workflow_dispatch]

jobs:
  linux:

    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.compiler_version }}
      CXX: g++-${{ matrix.compiler_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04 ]
        compiler_version: [ 11 ]

    steps:
      - uses: actions/checkout@v3

      - name: Install prerequisites
        run: |
          sudo apt-get update && sudo apt-get install -y \
          libxinerama-dev \
          libxcursor-dev \
          xorg-dev \
          libglu1-mesa-dev \
          pkg-config \
          libglfw3 \
          libglfw3-dev

      - name: Configure and build
        run: |
          cmake . -B build -DTHREEPP_USE_EXTERNAL_GLFW=ON -DCMAKE_BUILD_TYPE="Release"
          cmake --build build

      - name: Test
        run: |
          cd build/tests
          ctest --output-on-failure

  linux-no-glfw:

    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.compiler_version }}
      CXX: g++-${{ matrix.compiler_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04 ]
        compiler_version: [ 11 ]

    steps:
      - uses: actions/checkout@v3

      - name: Install prerequisites
        run: |
          sudo apt-get update && sudo apt-get install -y \
          libxinerama-dev \
          libxcursor-dev \
          xorg-dev \
          libglu1-mesa-dev \
          pkg-config

      - name: Configure and build
        run: |
          cmake . -B build -DTHREEPP_WITH_GLFW=OFF -DTHREEPP_BUILD_EXAMPLES=OFF -DCMAKE_BUILD_TYPE="Release"
          cmake --build build

      - name: Test
        run: |
          cd build/tests
          ctest --output-on-failure

  vcpkg-on-linux:

    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.compiler_version }}
      CXX: g++-${{ matrix.compiler_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        compiler_version: [11]

    steps:
    - uses: actions/checkout@v3

    - name: Install prerequisites
      run: |
        sudo apt-get update && sudo apt-get install -y \
        libxinerama-dev \
        libxcursor-dev \
        xorg-dev \
        libglu1-mesa-dev \
        pkg-config

    - name: Restore artifacts, or run vcpkg, build (and cache artifacts as post step)
      uses: lukka/run-vcpkg@v10
      id: runvcpkg
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: '4cac260c4b7331538d31886f57739fea0bffa27e'
        vcpkgJsonGlob: 'vcpkg.json'
        appendedCacheKey: vcpkginstall

    - name: Configure and build
      run: |
        cmake . -B build -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_MANIFEST_FEATURES="assimp" -DCMAKE_BUILD_TYPE="Release"
        cmake --build build

    - name: Test
      run: |
        cd build/tests
        ctest --output-on-failure


  windows:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022]

    steps:
      - uses: actions/checkout@v3

      - name: Configure and build
        run: |
          cmake . -A x64 -B build -DCMAKE_BUILD_TYPE="Release"
          cmake --build build --config Release

      - name: Test
        run: |
          cd build/tests
          ctest -C Release --output-on-failure


  darwin:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13]

    steps:
      - uses: actions/checkout@v3

      - name: Configure and build
        run: |
          cmake . -B build -DTHREEPP_BUILD_EXAMPLES=OFF -DTHREEPP_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE="Release"
          cmake --build build
